version: "3"

services:

  nginx-cmd:
    image: nginx:alpine
    hostname: nginx-cmd

  mariadb-maxscale:
    image: "harbor.lan:8443/library/maxscale-custom:rocky9"
    build:
      context: maxscale
    hostname: mariadb-maxscale
    depends_on:
      - mariadb-master
      - mariadb-slave

  mariadb-master:
    image: "harbor.lan:8443/library/mariadb-custom:11.2"
    command: --server_id=1 --log-bin --log-basename=master1 --binlog-format=mixed
    build:
      context: mariadb
    environment:
      MARIADB_ROOT_PASSWORD:
      MARIADB_USER: databaseuser
      MARIADB_PASSWORD: databasepassword
      MARIADB_DATABASE: databasename
      MARIADB_REPLICATION_USER: 
      MARIADB_REPLICATION_PASSWORD:
    # Maximum of 1 replica permitted for master
    deploy:
      replicas: 1
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - mariadb-master:/var/lib/mysql

  mariadb-slave:
    image: "harbor.lan:8443/library/mariadb-custom:11.2"
    command: --log-basename=master1 --binlog-format=mixed --read-only
    build:
      context: mariadb
    environment:
      MARIADB_ROOT_PASSWORD:
      MARIADB_MASTER_HOST: mariadb-master
      MARIADB_REPLICATION_USER:
      MARIADB_REPLICATION_PASSWORD:
      MARIADB_HEALTHCHECK_GRANTS: REPLICA MONITOR
      TASK_SLOT: "{{.Task.Slot}}"
    deploy:
      replicas: 3
      placement:
        # Max of one replica per node to prevent volume mount conflict
        max_replicas_per_node: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--replication_io", "--replication_sql", "--replication_seconds_behind_master=1", "--replication"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - mariadb-master
    volumes:
      - mariadb-slave:/var/lib/mysql

volumes:
    mariadb-master:
    mariadb-slave: